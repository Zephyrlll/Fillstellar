Domain Layer（ドメイン層）

  | モジュール                       | 責務         | 主要な機能                                            |
  |-----------------------------|------------|--------------------------------------------------|
  | entities/player.rs          | プレイヤーの状態管理 | • 認証情報管理• リソース所有状況• 研究進捗状況• 統計データ       
           |
  | entities/celestial_body.rs  | 天体の状態管理    | • 物理プロパティ（質量、位置、速度）• 生命進化状態•
  階層構造（親子関係）• リソース生成量 |
  | entities/game_state.rs      | ゲーム全体の状態管理 | • 物理演算設定• 時間倍率設定• イベント履歴• 自動保存機能
          |
  | services/physics_service.rs | 物理法則の実装    | • 重力計算• 軌道力学• 衝突判定• 物理定数管理                       |
  | services/life_evolution.rs  | 生命進化ロジック   | • 進化段階判定• 環境適応ロジック• 生命体の相互作用•
  知的生命体出現条件          |
  | services/resource_calc.rs   | リソース計算ロジック | • 天体からの資源生成• 生命体からの資源生成• 資源変換レート•      
  資源上限管理         |

  Application Layer（アプリケーション層）

  | モジュール                             | 責務        | 主要な機能                                    |
  |-----------------------------------|-----------|------------------------------------------|
  | commands/create_celestial_body.rs | 天体作成処理    | • 作成可能条件チェック• 軌道計算• 親子関係設定• リソース消費処理
       |
  | commands/update_resources.rs      | リソース更新処理  | • 定期的なリソース増加• 蓄積処理• 上限チェック• 統計更新      
     |
  | commands/evolve_life.rs           | 生命進化処理    | • 進化条件チェック• 確率計算• 進化実行• イベント記録           |
  | queries/get_game_state.rs         | ゲーム状態取得   | • 現在状態の取得• UIデータ変換• 権限チェック• キャッシュ処理   
     |
  | services/game_service.rs          | ゲーム統合サービス | • 複数コマンドの協調• トランザクション管理• 整合性チェック•  
  イベント発行 |
  | services/anti_cheat_service.rs    | チート検出サービス | • 操作頻度チェック• リソース変化検証• 物理法則違反検出•      
  異常パターン検出 |

  Infrastructure Layer（インフラ層）

  | モジュール                           | 責務            | 主要な機能                                     |
  |---------------------------------|---------------|-------------------------------------------|
  | persistence/postgres/*          | データ永続化        | • CRUD操作• トランザクション管理• 接続プール管理•
  マイグレーション実行 |
  | persistence/redis/*             | キャッシュ・セッション管理 | • 高速データアクセス• セッション管理• Pub/Sub機能•     
  分散ロック    |
  | websocket/connection_manager.rs | WebSocket接続管理 | • 接続プール管理• ルーム管理• メッセージルーティング• 切断処理  
       |
  | physics/physics_engine.rs       | 物理演算エンジン      | • N体問題の数値解法• 空間分割最適化• 並列処理• メモリ管理   
        |
  | security/anti_cheat_impl.rs     | チート検出実装       | • 統計的異常検出• パターンマッチング• 機械学習ベース検出•    
  ログ記録     |

  Presentation Layer（プレゼンテーション層）

  | モジュール                 | 責務          | 主要な機能                                   |
  |-----------------------|-------------|-----------------------------------------|
  | rest/handlers/game.rs | HTTP API処理  | • リクエスト解析• レスポンス生成• エラーハンドリング• 認証・認可    |
  | websocket/handlers.rs | WebSocket処理 | • リアルタイム通信• メッセージ変換• イベント配信• 接続状態管理     |
  | dto/request.rs        | リクエストデータ変換  | • JSON/バイナリ変換• 入力検証• 型安全性確保• バージョン管理    |      
  | dto/response.rs       | レスポンスデータ変換  | • ドメインオブジェクト変換• UI向けデータ整形• 差分更新対応• 圧縮処理 |

  Background Layer（バックグラウンド層）

  | モジュール                | 責務          | 主要な機能                                   |
  |----------------------|-------------|-----------------------------------------|
  | scheduler.rs         | タスクスケジューリング | • 定期実行管理• 優先度制御• リソース制限• エラー処理          |       
  | physics_worker.rs    | 物理演算ワーカー    | • 並列物理演算• 結果統合• 負荷分散• パフォーマンス監視         |
  | statistics_worker.rs | 統計処理ワーカー    | • データ集計• 履歴管理• レポート生成• データアーカイブ         |
  | cleanup_worker.rs    | クリーンアップ処理   | • 不要データ削除• ログローテーション• 古いセッション削除• メモリ最適化 |
