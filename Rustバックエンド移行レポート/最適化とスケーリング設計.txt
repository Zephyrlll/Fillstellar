1:
パフォーマンス最適化を実装。

1. 物理演算の最適化
   - Barnes-Hutアルゴリズムの実装
   - SIMD命令の活用
   - 並列処理（Rayon使用）

2. キャッシングレイヤー
   - Redis統合
   - 頻繁にアクセスされるデータのキャッシュ
   - キャッシュ無効化戦略

3. データベースクエリ最適化
   - バッチ処理
   - 適切なインデックス
   - コネクションプーリング調整

実装と計測結果の比較も行ってください。


2:
本番運用のための監視・ログシステムを実装。

1. 構造化ログ（tracing crate使用）
   - リクエストID追跡
   - パフォーマンスメトリクス
   - エラー追跡

2. メトリクス収集
   - Prometheus形式でエクスポート
   - カスタムメトリクス定義
   - ダッシュボード用データ

3. ヘルスチェックエンドポイント
   - /health（基本）
   - /health/detailed（詳細）
   - 依存サービスの確認

4. アラート条件の定義


3:
Lightsailへのデプロイ準備を完了させる。

1. Dockerイメージの最適化
   - マルチステージビルド
   - 最小イメージサイズ
   - セキュリティスキャン

2. 環境変数管理
   - 本番/ステージング設定
   - シークレット管理
   - 設定の検証

3. デプロイスクリプト
   - ブルーグリーンデプロイメント
   - ヘルスチェック
   - ロールバック機能

4. バックアップ戦略
   - 自動バックアップ
   - リストア手順